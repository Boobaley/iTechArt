{"version":3,"sources":["views/Counter/styles.js","views/Counter/Counter.js","containers/CounterContainer.js","App.js","index.js"],"names":["useStyles","makeStyles","button","marginRight","padding","fontWeight","ContainedButtons","props","classes","react_default","a","createElement","Button","Object","assign","variant","className","output","fontSize","color","margin","width","borderRadius","border","textAlign","marginBottom","boxShadow","backgroundColor","buttonsWrapper","display","justifyContent","counterWrapper","Counter","style","counterValue","onClick","decrement","reset","increment","CounterContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","count","handleRemove","bind","assertThisInitialized","handleReset","handleAdd","setState","views_Counter_Counter","React","Component","App","containers_CounterContainer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gSAIMA,EAAYC,YAAW,iBAAO,CAClCC,OAAQ,CACNC,YAAa,GACbC,QAAS,GACTC,WAAY,QAID,SAASC,EAAiBC,GACvC,IAAMC,EAAUR,IAEhB,OACES,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAQC,QAAQ,YAAYC,UAAWR,EAAQN,QAAWK,IAI9D,IAAMU,EAAS,CACXC,SAAU,GACVC,MAAO,UACPd,WAAY,IACZe,OAAQ,SACRC,MAAO,IACPjB,QAAS,YACTkB,aAAc,OACdC,OAAQ,oBACRC,UAAW,SACXC,aAAc,GACdC,UAAW,+BACXC,gBAAiB,WAGfC,EAAiB,CACnBC,QAAS,OACTC,eAAgB,UAGdC,EAAiB,CACnB3B,QAAS,GACTuB,gBAAiB,WCjBNK,EApBC,SAACzB,GACb,OACEE,EAAAC,EAAAC,cAAA,OAAKsB,MAAOF,GACVtB,EAAAC,EAAAC,cAAA,OAAKsB,MAAOhB,GAASV,EAAM2B,cAC3BzB,EAAAC,EAAAC,cAAA,OAAKsB,MAAOL,GACRnB,EAAAC,EAAAC,cAACL,EAAD,CAAQ6B,QAAS5B,EAAM6B,WAAvB,aACA3B,EAAAC,EAAAC,cAACL,EAAD,CAAQ6B,QAAS5B,EAAM8B,OAAvB,SACA5B,EAAAC,EAAAC,cAACL,EAAD,CAAQ6B,QAAS5B,EAAM+B,WAAvB,gBC+BGC,cAvCb,SAAAA,EAAYhC,GAAO,IAAAiC,EAAA,OAAA3B,OAAA4B,EAAA,EAAA5B,CAAA6B,KAAAH,IACfC,EAAA3B,OAAA8B,EAAA,EAAA9B,CAAA6B,KAAA7B,OAAA+B,EAAA,EAAA/B,CAAA0B,GAAAM,KAAAH,KAAMnC,KACDuC,MAAQ,CACXC,MAAO,GAGTP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBpC,OAAAqC,EAAA,EAAArC,CAAA2B,IACpBA,EAAKW,YAAcX,EAAKW,YAAYF,KAAjBpC,OAAAqC,EAAA,EAAArC,CAAA2B,IACnBA,EAAKY,UAAYZ,EAAKY,UAAUH,KAAfpC,OAAAqC,EAAA,EAAArC,CAAA2B,IARFA,2EAYfE,KAAKW,SAAS,CAAEN,MAAOL,KAAKI,MAAMC,MAAQ,2CAItCL,KAAKI,MAAMC,MAAQ,EACrBL,KAAKW,SAAS,CAAEN,MAAOL,KAAKI,MAAMC,MAAQ,IAE1CL,KAAKW,SAAS,CAAEN,MAAO,0CAKzBL,KAAKW,SAAS,CAAEN,MAAO,qCAIvB,OACEtC,EAAAC,EAAAC,cAAC2C,EAAD,CACEpB,aAAcQ,KAAKI,MAAMC,MACzBT,UAAWI,KAAKU,UAChBhB,UAAWM,KAAKM,aAChBX,MAAOK,KAAKS,qBAlCSI,IAAMC,WCStBC,EARH,WACV,OACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+C,EAAD,QCFNC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5f927e78.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  button: {\r\n    marginRight: 10,\r\n    padding: 20,\r\n    fontWeight: 700\r\n  },\r\n}));\r\n\r\nexport default function ContainedButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Button variant=\"contained\" className={classes.button}{...props}></Button>\r\n  );\r\n}\r\n\r\nconst output = {\r\n    fontSize: 50,\r\n    color: '#e59067',\r\n    fontWeight: 700,\r\n    margin: '0 auto',\r\n    width: 200,\r\n    padding: '10px 50px',\r\n    borderRadius: '20px',\r\n    border: '1px solid #e0e0e0',\r\n    textAlign: 'center',\r\n    marginBottom: 50,\r\n    boxShadow: 'inset 0px 0px 0px 10px black',\r\n    backgroundColor: '#3b3a3a'\r\n}\r\n\r\nconst buttonsWrapper = {\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n}\r\n\r\nconst counterWrapper = {\r\n    padding: 50,\r\n    backgroundColor: '#883e3e'\r\n}\r\n\r\nexport {output, buttonsWrapper, counterWrapper};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './styles';\r\nimport {output, buttonsWrapper, counterWrapper} from './styles';\r\n\r\nconst Counter = (props) => {\r\n    return (\r\n      <div style={counterWrapper}>\r\n        <div style={output}>{props.counterValue}</div>\r\n        <div style={buttonsWrapper}>\r\n            <Button onClick={props.decrement}>DECREMENT</Button>\r\n            <Button onClick={props.reset}>RESET</Button>\r\n            <Button onClick={props.increment} >INCREMENT</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nCounter.propTypes = {\r\n    counterValue: PropTypes.number.isRequired,\r\n    decrement: PropTypes.func.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    increment: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\nimport Counter from '../views/Counter/Counter';\r\n\r\nclass CounterContainer extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        count: 0\r\n      }\r\n\r\n      this.handleRemove = this.handleRemove.bind(this);\r\n      this.handleReset = this.handleReset.bind(this);\r\n      this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n    \r\n    handleAdd() {\r\n      this.setState({ count: this.state.count + 1 });\r\n    };\r\n  \r\n    handleRemove() {\r\n      if (this.state.count > 0) {\r\n        this.setState({ count: this.state.count - 1 });\r\n      } else {\r\n        this.setState({ count: 0 });\r\n      }\r\n    };\r\n  \r\n    handleReset() {\r\n      this.setState({ count: 0 })\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <Counter \r\n          counterValue={this.state.count}\r\n          increment={this.handleAdd}\r\n          decrement={this.handleRemove} \r\n          reset={this.handleReset}\r\n        /> \r\n      );\r\n    };\r\n};\r\n\r\nexport default CounterContainer;","import React from 'react';\r\nimport './App.css';\r\nimport CounterContainer from './containers/CounterContainer';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <CounterContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}